---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: strimzi
  labels:
    app: my-cluster
spec:
  kafka:
    version: 3.2.1
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: loadbalancer
        tls: true
        authentication:
          type: tls
        configuration:
          # class: "traefik"
          bootstrap:
            annotations:
              # metallb.universe.tf/loadBalancerIPs:
              #   - "192.168.178.52"
              external-dns.alpha.kubernetes.io/hostname: bootstrap-kafka.teamkhunglong.com.
              # external-dns.alpha.kubernetes.io/ttl: "60"
              # external-dns/is-public: "true"
              # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNELID}.cfargotunnel.com"
            alternativeNames:
              - bootstrap-kafka.teamkhunglong.com
            loadBalancerIP: "192.168.178.52"
          brokers:
            - broker: 0
              annotations:
                # metallb.universe.tf/loadBalancerIPs:
                # - "192.168.178.53"
                external-dns.alpha.kubernetes.io/hostname: broker-0.teamkhunglong.com.
                # external-dns.alpha.kubernetes.io/ttl: "60"
                # external-dns/is-public: "true"
                # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNELID}.cfargotunnel.com"
              advertisedHost: broker-0.teamkhunglong.com
              loadBalancerIP: "192.168.178.53"
            - broker: 1
              annotations:
                # metallb.universe.tf/loadBalancerIPs:
                # - "192.168.178.54"
                external-dns.alpha.kubernetes.io/hostname: broker-1.teamkhunglong.com.
                # external-dns.alpha.kubernetes.io/ttl: "60"
                # external-dns/is-public: "true"
                # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNELID}.cfargotunnel.com"
              advertisedHost: broker-1.teamkhunglong.com
              loadBalancerIP: "192.168.178.54"
            - broker: 2
              annotations:
                # metallb.universe.tf/loadBalancerIPs:
                # - "192.168.178.55"
                external-dns.alpha.kubernetes.io/hostname: broker-2.teamkhunglong.com.
                # external-dns.alpha.kubernetes.io/ttl: "60"
                # external-dns/is-public: "true"
                # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNELID}.cfargotunnel.com"
              advertisedHost: broker-2.teamkhunglong.com
              loadBalancerIP: "192.168.178.55"
          brokerCertChainAndKey:
            secretName: my-cluster-lets-encrypt
            certificate: tls.crt
            key: tls.key
      - name: external2
        port: 9095
        type: loadbalancer
        tls: false
        configuration:
          bootstrap:
            # annotations:
            #   external-dns.alpha.kubernetes.io/hostname: bootstrap-kafka.teamkhunglong.com.
            alternativeNames:
              - bootstrap-kafka.teamkhunglong.com
            loadBalancerIP: "192.168.178.56"
          brokers:
            - broker: 0
              # annotations:
              #   external-dns.alpha.kubernetes.io/hostname: broker-0.teamkhunglong.com.
              advertisedHost: broker-0.teamkhunglong.com
              loadBalancerIP: "192.168.178.57"
            - broker: 1
              # annotations:
              #   external-dns.alpha.kubernetes.io/hostname: broker-1.teamkhunglong.com.
              advertisedHost: broker-1.teamkhunglong.com
              loadBalancerIP: "192.168.178.58"
            - broker: 2
              # annotations:
              #   external-dns.alpha.kubernetes.io/hostname: broker-2.teamkhunglong.com.
              advertisedHost: broker-2.teamkhunglong.com
              loadBalancerIP: "192.168.178.59"
    # authorization:
    #   type: "simple"
    #   superUsers:
    #     - "minhtt159"
    config:
      auto.create.topics.enable: "true"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.2"
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 10Gi
          deleteClaim: true
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: true
  entityOperator:
    topicOperator: {}
    userOperator: {}
